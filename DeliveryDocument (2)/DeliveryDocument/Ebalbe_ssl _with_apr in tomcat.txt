./configure --with-apr=$HOME/APR \
            --with-java-home=$JAVA_HOME \
            --with-ssl=$HOME/OPENSSL \
            --prefix=$CATALINA_HOME
			
./configure --with-apr=/opt/tomcat/bin/tomcat-apt/tomcat-native-1.2.25-src/native/srclib/apr \
            --with-java-home=/usr/java/jdk-11.0.9 \
            --with-ssl=yes \
            --prefix=$CATALINA_HOME
			
			
			
wget http://mirrors.ukfast.co.uk/sites/ftp.apache.org//tomcat/tomcat-connectors/native/1.1.29/source/tomcat-native-1.1.29-sr
wget http://mirrors.ukfast.co.uk/sites/ftp.apache.org//tomcat/tomcat-connectors/native/1.1.29/source/tomcat-native-1.1.29-src.tar.gz

export http_proxy=http://127.0.0.1:3128/

export http_proxy=http://10.191.206.179:3128
export https_proxy=http://10.191.206.179:3128


wget http://apache.mirror.anlx.net//apr/apr-1.5.0.tar.gz

yum install tomcat-native.x86_64

yum install gcc*

export LD_LIBRARY_PATH='$LD_LIBRARY_PATH:/usr/local/apr/lib'

<!--APR library loader. Documentation at /docs/apr.html -->
<Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />


https://rpmfind.net/linux/rpm2html/search.php?query=libtcnative-1.so.0()(64bit)


LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CATALINA_HOME/lib
export LD_LIBRARY_PATH


./configure --with-apr=/usr/local/apr --with-java-home=/opt/atlassian/jira/jre



/opt/tomcat/bin/setenv.sh
export LD_LIBRARY_PATH='$LD_LIBRARY_PATH:/usr/local/apr/lib'

****************************URL FOR ENABLE SSL ON TOMCAT***************************
https://www.fatalerrors.org/a/the-apr-library-was-not-found-on-the-java.library.path.html

./configure --with-apr=/usr/local/apr --with-java-home=/opt/jdk1.8.0_271 --with-ssl=/usr/local/openssl

make


./config –prefix=/opt/local/openssl –fPIC




<Listener className="org.apache.catalina.core.AprLifecycleListener" useAprConnector="true" SSLEngine="on" SSLRandomSeed="builtin" />



<Connector port="9090" maxHttpHeaderSize="8192"
maxThreads="150"
enableLookups="false" disableUploadTimeout="true"
acceptCount="100" scheme="https" secure="true"
SSLEnabled="true"
SSLCertificateFile="/opt/ssl_cert/22122020/uatopsuat.statebanktimes.in.crt"
SSLCertificateKeyFile="/opt/ssl_cert/22122020/uatops.key" />


<Connector port="9090" maxHttpHeaderSize="8192"
maxThreads="150"
enableLookups="false" disableUploadTimeout="true"
acceptCount="100" scheme="https" secure="true"
SSLEnabled="true"
SSLCertificateFile="${catalina.base}/conf/uatopsuat.statebanktimes.in.crt"
SSLCertificateKeyFile="${catalina.base}/conf/uatops.key" />




certificate password:DevOpsDev@2020


*****************enbale ssl for jira******************************
follow the below link to configure ssl for atlassian jira.
https://confluence.atlassian.com/display/JIRA044/Running+JIRA+over+SSL+or+HTTPS#RunningJIRAoverSSLorHTTPS-ImportCertificateIntoTheTruststore
/usr/java/jdk-11.0.9/lib/security

this enty we need to pur in jira server.xml file.
vi /opt/atlassian/jira/conf/server.xml
<Connector port="8085" relaxedPathChars="[]|" relaxedQueryChars="[]|{}^&#x5c;&#x60;&quot;&lt;&gt;" maxHttpHeaderSize="8192" protocol="HTTP/1.1" schema="https" secure="true" SSLEnabled="true" maxThreads="150" minSpareThreads="25" maxSpareThreads="75" clientAuth="false" sslProtocol="TLS" keystoreFile="conf/uatopsuat.statebanktimes.in.pfx" keystorePass="DevOpsDev@2020" keystoreType="PKCS12" enableLookups="false" disableUploadTimeout="true" useBodyEncodingForURI="true" acceptCount="100" scheme="https" />

systemctl start jira
systemctl status jira
systemctl status jira

<security-constraint>
<web-resource-collection>
<web-resource-name>all-except-attachments</web-resource-name>
<url-pattern>*.jsp</url-pattern>
<url-pattern>*.jspa</url-pattern>
<url-pattern>/browse/*</url-pattern>
</web-resource-collection>
<user-data-constraint>
<transport-guarantee>CONFIDENTIAL</transport-guarantee>
</user-data-constraint>
</security-constraint>





<Connector port="8443" maxHttpHeaderSize="8192" SSLEnabled="true"
maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
enableLookups="false" disableUploadTimeout="true" useBodyEncodingForURI="true"
acceptCount="100" scheme="https" secure="true"
clientAuth="false" sslProtocol="TLS" />

<Connector port="8085" relaxedPathChars="[]|" relaxedQueryChars="[]|{}^&#x5c;&#x60;&quot;&lt;&gt;" maxHttpHeaderSize="8192" SSLEnabled="true"
maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
enableLookups="false" disableUploadTimeout="true" useBodyEncodingForURI="true"
acceptCount="100" scheme="https" secure="true"
clientAuth="false" sslProtocol="TLS" />




<security-constraint>
<web-resource-collection>
<web-resource-name>all-except-attachments</web-resource-name>
<url-pattern>*.jsp</url-pattern>
<url-pattern>*.jspa</url-pattern>
<url-pattern>/browse/*</url-pattern>
</web-resource-collection>
<user-data-constraint>
<transport-guarantee>CONFIDENTIAL</transport-guarantee>
</user-data-constraint>
</security-constraint>



APR CONFIGURATION

<Connector protocol="HTTP/1.1" port="9090" maxHttpHeaderSize="8192"
maxThreads="150"
enableLookups="false" disableUploadTimeout="true"
acceptCount="100" scheme="https" secure="true"
SSLEnabled="true"
SSLCertificateFile="${catalina.base}/conf/uatopsuat.statebanktimes.in.crt"
SSLCertificateKeyFile="${catalina.base}/conf/uatops.key" SSLVerifyClient="optional" SSLProtocol="TLSv1+TLSv1.1+TLSv1.2" />



<Connector port="8085" relaxedPathChars="[]|" relaxedQueryChars="[]|{}^&#x5c;&#x60;&quot;&lt;&gt;" maxHttpHeaderSize="8192" protocol="HTTP/1.1" schema="https" secure="true" SSLEnabled="true" maxThreads="150" minSpareThreads="25" maxSpareThreads="75" clientAuth="false" sslProtocol="TLS"  SSLCertificateFile="/opt/atlassian/jira/conf/uatopsuat.statebanktimes.in.crt"
SSLCertificateKeyFile="/opt/atlassian/jira/conf/uatops.key" SSLVerifyClient="optional" SSLProtocol="TLSv1+TLSv1.1+TLSv1.2" enableLookups="false" disableUploadTimeout="true" useBodyEncodingForURI="true" acceptCount="100" scheme="https" />


put this enty in setenv.sh
export LD_LIBRARY_PATH='$LD_LIBRARY_PATH:/usr/local/apr/lib'

In the same file we need to put JRE_HOME AND JAVA_HOME.


SSL CONFIGURATION FOR SONARQUBE*****************
gitlab: https://docs.demoapp1.com/omnibus/settings/ssl.html
 
Jenkins: https://uatopscube.com/configure-ssl-jenkins/
Enbale ssl for jenkins
https://www.linuxhelp.com/install-ssl-certificate-in-rhelcentos
  
SonarQube: http://docs.demoapp1.org/display/SONAR/Securing+the+Server+Behind+a+Proxy.



openssl pkcs12 -export -out demoapp1.p12 \
-passout 'pass:DevOpsDev@2020' -inkey uatopsuat.statebanktimes.in.key \
-in uatopsuat.statebanktimes.in.crt -certfile uatopsuat.statebanktimes.in.crt -name demoapp1.uatopssbi.com


keytool -importkeystore -srckeystore demoapp1.p12 \
-srcstorepass 'DevOpsDev@2020' -srcstoretype PKCS12 \
-srcalias demoapp1.uatopssbi.com -deststoretype JKS \
-destkeystore demoapp1.jks -deststorepass 'DevOpsDev@2020' \
-destalias demoapp1.uatopssbi.com



sonar.web.https.keyAlias=demoapp1.uatopssbi.com


sonar.web.https.keystoreFile=/opt/demoapp1/conf/demoapp1.jks


sonar.web.https.keyPass=DevOpsDev@2020






openssl pkcs12 -export -in uatopsuat.statebanktimes.in.crt -inkey uatopsuat.statebanktimes.in.key -out sonarqube.p12 -name sonarqube -CAfile uatopsuat.statebanktimes.in.crt




openssl pkcs12 -export -in uatopsuat.statebanktimes.in.crt -inkey sonar.key -out sonar.p12 -name sonar -CAfile uatopsuat.statebanktimes.in.crt 



Pass: DevOpsDev@2020

/var/sonarqube-7.9.1/conf

sonar.web.https.keyAlias=sonarqube
sonar.web.https.keyPass=DevOpsDev@2020
sonar.web.https.keystoreFile=/var/sonarqube-7.9.1/conf/sonarqube.p12
sonar.web.https.keystoreType=PKCS12


/usr/java/jdk-11.0.9


cat uatopsuat.statebanktimes.in.crt /etc/ssl/certs/ca-certificates.crt > allcacerts.crt

openssl pkcs12 -export -chain -CAfile uatopsuat.statebanktimes.in.crt -in uatopsuat.statebanktimes.in_b64.cer \
    -inkey uatopsuat.statebanktimes.in.key -out sonarqube.keystore -name sonar -passout \
    pass:DevOpsDev@2020


gitlab
Sonarqube
Jenkins  ===> done with plaintext passowrd
Nexus   ====>
gitlab



# engine names.  NOTE: If you enable an accelerator and the
# server does not start, consult the error logs and ensure
# your accelerator is functioning properly.
#
SSLCryptoDevice builtin
#SSLCryptoDevice ubsec

##
## SSL Virtual Host Context
##


<VirtualHost jenkinsuat.statebanktimes.in:8081>
SSLEngine on
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA
ProxyRequests     Off
AllowEncodedSlashes NoDecode


    ProxyPreserveHost On


    ProxyPass / http://10.191.159.49:8083/ nocanon
    ProxyPassReverse / http://10.191.159.49:8083/
    SSLCertificateFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.crt
    SSLCertificateKeyFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.key
RequestHeader set X-Forwarded-Proto "https"
#    RequestHeader set X-Forwarded-Port "8081"
</VirtualHost>

<VirtualHost nexusuat.statebanktimes.in:8081>
SSLEngine on
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA
ProxyRequests     Off
AllowEncodedSlashes NoDecode
    ProxyPreserveHost On

    ProxyPass / http://10.191.159.49:8082/ nocanon
    ProxyPassReverse / http://10.191.159.49:8082/
    SSLCertificateFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.crt
    SSLCertificateKeyFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.key
RequestHeader set X-Forwarded-Proto "https"
</VirtualHost>


<VirtualHost keyclockduat.statebanktimes.in:6565>
SSLEngine on
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA
ProxyRequests     Off
AllowEncodedSlashes NoDecode
    ProxyPreserveHost On

    ProxyPass / http://10.191.159.51:6565/ nocanon
    ProxyPassReverse / http://10.191.159.51:6565/
    SSLCertificateFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.crt
    SSLCertificateKeyFile /opt/ssl_cert/29122020/uatopsuat.statebanktimes.in.key
RequestHeader set X-Forwarded-Proto "https"
</VirtualHost>





















